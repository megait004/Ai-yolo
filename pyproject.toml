[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "person-detection-yolo"
version = "1.0.0"
description = "Hệ thống nhận dạng và đếm người theo thời gian thực bằng YOLOv8"
readme = "docs/README.md"
license = {text = "MIT"}
authors = [
    {name = "giap", email = "giapfc123@gmail.com"}
]
maintainers = [
    {name = "giap", email = "giapfc123@gmail.com"}
]
keywords = ["yolo", "object-detection", "person-counting", "computer-vision", "opencv"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "ultralytics>=8.0.0",
    "opencv-python>=4.8.0",
    "numpy>=1.24.4,<2.0",
    "matplotlib>=3.7.0",
    "pillow>=10.0.0,<12.0",
    "pandas>=2.0.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "scikit-learn>=1.3.0",
    "albumentations>=1.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]
ui = [
    "streamlit>=1.25.0",
    "gradio>=3.40.0",
    "tkinter",  # Usually included with Python
]

[project.urls]
Homepage = "https://github.com/yourusername/person-detection-yolo"
Documentation = "https://person-detection-yolo.readthedocs.io"
Repository = "https://github.com/yourusername/person-detection-yolo.git"
Issues = "https://github.com/yourusername/person-detection-yolo/issues"
Changelog = "https://github.com/yourusername/person-detection-yolo/blob/main/CHANGELOG.md"

[project.scripts]
person-detection = "src.main:main"
person-detection-demo = "scripts.demo:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "config*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.txt", "*.md"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "config"]
known_third_party = ["ultralytics", "cv2", "numpy", "torch", "pandas"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false

[[tool.mypy.overrides]]
module = [
    "ultralytics.*",
    "cv2.*",
    "albumentations.*",
]
ignore_missing_imports = true
